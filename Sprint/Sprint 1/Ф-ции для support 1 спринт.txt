+ Авторизация пользователя support
+ Получить все заявки со статусом "новые"
+ Получить все заявки со статусом "в работе"
+ Регистрация нового пользователя
	получить список продуктов
+ Регистрация нового пользователя support

+ Регистрация нового продукта
+ Регистрация новой темы

+Получить информацию по конкретному заказу, переписку в хрон. порядке


-----Данил 22.05.2019
-----Реализовать отдельное окно "Расширенный поиск" где можно запускать поиск(сортировку) по разным таблицам и полям
-----Реализовать изменнения статуса клиента(оказывается ли поддержка данному клиенту или нет)

        /// <summary>
        /// Попытка авторизации специалиста поддержки
        /// </summary>
        /// <param name="login"> Логин Клиента</param>
        /// <param name="password"> Пароль Клиента</param>
        /// <returns>
        /// Метод возвращает полную информацию о специалисте поддержки если соединение прошло удачно 
        /// или NULL, если верно обратное
        /// </returns>
        [OperationContract]
        MySupportSpecialist SupporterConnection(string login, string password);

        /// <summary>
        /// Запросить список текущих запросов пользователей. Статус запросов должен быть равен 1 или 5
        /// где поле Support в классе RequestStatus равно "входящие"
        /// </summary>
        /// <returns>
        /// Возвращает с краткой информацией о запросах с требуемым статусом
        /// </returns>
        [OperationContract]
        List<MyRequest> Get_Undistributed_Requests();

        /// <summary>
        /// Запросить список текущих запросов пользователей. Статус запросов должен быть равен 2
        /// где поле Support в классе RequestStatus равно "в работе"
        /// </summary>
        /// <param name="supporter_ID"> ID специалиста поддержки вызвавшего этот метод</param>
        /// <returns>
        /// Возвращает с краткой информацией о запросах с требуемым статусом
        /// </returns>
        [OperationContract]
        List<MyRequest> Get_InProgress_Requests(int supporter_ID);

        /// <summary>
        /// Запросить список всех существующих продуктов, которым оказывается техподдержка
        /// </summary>
        /// <returns>
        /// Метод вернет список запрошенных продуктов
        /// или пустой список если в БД нет продуктов
        /// </returns>
        [OperationContract]
        List<MyProduct> Get_All_Products();

        /// <summary>
        /// Попытка регистрации нового специалиста поддержки в БД
        /// </summary>
        /// <param name="newSpecInfo"> 
        /// Класс содержащий всю доступную информацию о новом специалисте поддержки 
        /// кроме ID который присвоит БД
        /// </param>
        /// <returns>Возвращает TRUE or FALSE  в зависимочти от успешности действия.</returns>
        [OperationContract]
        bool Register_New_Support_Spesialist(MySupportSpecialist newSpecInfo);

        /// <summary>
        /// 
        /// </summary>
        /// <param name="newUserInfo">
        /// Класс содержащий всю доступную информацию о новом клиенте 
        /// кроме ID который присвоит БД
        /// </param>
        /// <returns>Возвращает TRUE or FALSE  в зависимочти от успешности действия.</returns>
        [OperationContract]
        bool Register_New_Uer(MyUser newUserInfo); // Взять это в трай... и ты мне его вернешь в случае ошибки у тебя. чтоб было ясно почему не получилось
		
		        /// <summary>
        /// Метод добавляет сообщение к текущему запросу, у которого нет статуса "Закрыт". 
        /// Вызывается как пользователем так и специалистом поддержки.
        /// Вызывается вне зависимости от очередности.
        /// </summary>
        /// <param name="oldRequest">Краткая информация о запросе(Тема, продукт, данные о клиенте и т.д.)</param>
        /// <param name="newAppeal">новый сообщение внутри рабочего запроса, конкретное описание проблемы и сопутствующие файлы если необходимо</param>
        /// <returns>Возвращает TRUE or FALSE  в зависимочти от успешности действия.</returns>
        [OperationContract]
        bool Post_Appeal_Inside_Request(MyRequest oldRequest, MyContact newAppeal);

        /// <summary>
        /// Запросить полную информацию о запросе на текущий момент
        /// </summary>
        /// <param name="RequestID">ID запроса по которому вернуть полную историю общения</param>
        /// <returns>Метод возвращает полную историю по конкретному запросу, включая все сообщения и прикрепленные файлы, в хронологоческом порядке</returns>
        [OperationContract]
        List<MyContact> Get_Full_LOG_Of_Current_Request(int RequestID);
		
		        /// <summary>
        /// Привязать все уникальные темы к нвому продукту, если хоть одна тема уже привязана к этому продукту,
        /// значит продукт не новый, запрос на привязку в БД выполняться не будет
        /// </summary>
        /// <param name="productID"> ID продукта</param>
        /// <returns>Возвращает TRUE or FALSE  в зависимочти от успешности действия.</returns>
        [OperationContract]
        bool Link_New_Product_With_All_ExistingSubjects(int productID);
		
		        /// <summary>
        /// Попытка зарегистрировать новый продукт в БД
        /// Проводит проверку на уникальность имени продукта
        /// </summary>
        /// <param name="newProduct"> Класс содержащий полную информацию о продукте</param>
        /// <returns>Возвращает TRUE or FALSE  в зависимочти от успешности действия.</returns>
        [OperationContract]
        bool Registr_New_Product(MyProduct newProduct);

        /// <summary>
        /// Попытка зарегистрировать новую тему(проблему) в БД
        /// Проводит проверку на уникальность имени темы(проблемы)
        /// </summary>
        /// <param name="newSubject"> Класс содержащий полную информацию о теме(проблеме)</param>
        /// <returns>Возвращает TRUE or FALSE  в зависимочти от успешности действия.</returns>
        [OperationContract]
        bool Registr_New_Subject(MySubject newSubject);
		
		